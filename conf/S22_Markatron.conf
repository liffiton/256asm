[general]
# Architecture name
name: Markatron
# Instruction size (bits)
inst_size: 16
# Highest register number
max_reg: 15
# Prefix for register names in assembly
reg_prefix: $
# Sample assembly file (default code for asmweb)
samplefile: S22_Markatron_sample.asm

[special_regs]
# Special registers
# Write as 'regname: number'
# e.g. '$zero: 0'
$zero: 0
$input: 14
$branch: 15

[instruction_opcodes]
# Write as 'instruction: opcode'
# e.g. 'add: 0'
add: 0
sub: 1
seti: 2
rand: 3
sb: 4
lb: 5
j: 6
beq: 7
bgt: 8
blt: 9

#[instruction_funccodes]
# Write as 'instruction: funccode'
# e.g. 'add: 0'
# Leave this section out if function codes are not used

[instruction_parts]
# Write as 'instruction: fieldchars'
# e.g. 'add: orr'
# Specify the order in the **assembly** code.  If it's different in binary, tweaks will adjust it.
# Field characters:
#  o = opcode
#  r = register
#  f = function code
#  i = immediate
#  l = label [as a relative offset]
#  j = label [as an absolute address]
#  x = unused (fill w/ 0 bits -- requires field_size set below, if used)
add: orrr
sub: orrr
seti: ori
rand: ori
sb: orr
lb: orr
j: oj
beq: olr
bgt: olr
blt: olr

[instruction_tweaks]
# Write as 'instruction: tweak'
# where 'tweak' is either empty or:
#   flip_args: flip first and second argument when encoding to machine code
#   dupe1to3: copy first argument to be third argument when encoding to machine code
add:
sub:
seti:
rand:
sb:
lb:
j:
beq:
bgt:
blt:

[field_sizes]
# Bits per field in machine code instructions
# Write as 'fieldchar: length'
# See [instruction_parts] section for field characters
# e.g. 'r: 3'
o: 4
r: 4
i: 8
f: 0
l: 8
j: 12
