[general]
# Architecture name
name: ApplePi
# Instruction size (bits)
inst_size: 16
# Highest register number
max_reg: 15
# Prefix for register names in assembly
reg_prefix: $
# Sample assembly file (default code for asmweb)
samplefile: S21_ApplePi_sample.asm

[special_regs]
# Special registers
# Write as 'regname: number'
# e.g. '$zero: 0'
$zero: 0
$one: 1

[instruction_opcodes]
# Write as 'instruction: opcode'
# e.g. 'add: 0'
add: 0
sub: 1
rand: 2
load: 3
store: 4
jal: 5
jr: 6
beq: 7
bgt: 8
set: 9
seti: 10

#[instruction_funccodes]
# Write as 'instruction: funccode'
# e.g. 'add: 0'
# Leave this section out if function codes are not used

[instruction_parts]
# Write as 'instruction: fieldchars'
# e.g. 'add: orr'
# Field characters:
#  o = opcode
#  r = register
#  f = function code
#  i = immediate
#  l = label [as a relative offset]
#  j = label [as an absolute address]
#  x = unused (fill w/ 0 bits -- requires field_size set below, if used)
add: orr
sub: orr
rand: ori
load: orr
store: orr
jal: oj
jr: or
beq: orl
bgt: orl
set: orr
seti: ori

[instruction_tweaks]
# Write as 'instruction: tweak'
# where 'tweak' is either empty or:
#   flip_regs: flip first and second argument when encoding to machine code
add:
sub:
rand:
load:
store: flip_args
jal:
jr:
beq:
bgt:
set:
seti:

[field_sizes]
# Bits per field in machine code instructions
# Write as 'fieldchar: length'
# See [instruction_parts] section for field characters
# e.g. 'r: 3'
o: 4
r: 4
i: 8 
l: 8
j: 12
